### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules main.ml > main.ml.depends
# Target: util/assert.mli.depends, tags: { extension:mli, file:util/assert.mli, ocaml, ocamldep, quiet }
ocamldep.opt -modules util/assert.mli > util/assert.mli.depends
# Target: backend.ml.depends, tags: { extension:ml, file:backend.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules backend.ml > backend.ml.depends
# Target: datastructures.ml.depends, tags: { extension:ml, file:datastructures.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules datastructures.ml > datastructures.ml.depends
# Target: ll/ll.ml.depends, tags: { extension:ml, file:ll/ll.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules ll/ll.ml > ll/ll.ml.depends
# Target: ll/ll.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ll/ll.cmo, file:ll/ll.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I ll -I x86 -I util -o ll/ll.cmo ll/ll.ml
# Target: liveness.ml.depends, tags: { extension:ml, file:liveness.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules liveness.ml > liveness.ml.depends
# Target: cfg.ml.depends, tags: { extension:ml, file:cfg.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules cfg.ml > cfg.ml.depends
# Target: datastructures.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:datastructures.cmo, file:datastructures.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o datastructures.cmo datastructures.ml
# Target: ll/llutil.ml.depends, tags: { extension:ml, file:ll/llutil.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules ll/llutil.ml > ll/llutil.ml.depends
# Target: solver.ml.depends, tags: { extension:ml, file:solver.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules solver.ml > solver.ml.depends
# Target: ll/llutil.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ll/llutil.cmo, file:ll/llutil.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I ll -I x86 -I util -o ll/llutil.cmo ll/llutil.ml
+ ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I ll -I x86 -I util -o ll/llutil.cmo ll/llutil.ml
File "ll/llutil.ml", line 134, characters 2-20:
134 |   Pervasives.compare
        ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
# Target: solver.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:solver.cmo, file:solver.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o solver.cmo solver.ml
# Target: cfg.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:cfg.cmo, file:cfg.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o cfg.cmo cfg.ml
# Target: util/platform.ml.depends, tags: { extension:ml, file:util/platform.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules util/platform.ml > util/platform.ml.depends
# Target: x86/x86.ml.depends, tags: { extension:ml, file:x86/x86.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules x86/x86.ml > x86/x86.ml.depends
# Target: liveness.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:liveness.cmo, file:liveness.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o liveness.cmo liveness.ml
# Target: util/platform.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:util/platform.cmo, file:util/platform.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I util -I x86 -I ll -o util/platform.cmo util/platform.ml
+ ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I util -I x86 -I ll -o util/platform.cmo util/platform.ml
File "util/platform.ml", line 77, characters 10-27:
77 |     flush Pervasives.stdout )
               ^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
# Target: x86/x86.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:x86/x86.cmo, file:x86/x86.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o x86/x86.cmo x86/x86.ml
# Target: driver.ml.depends, tags: { extension:ml, file:driver.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules driver.ml > driver.ml.depends
# Target: astlib.ml.depends, tags: { extension:ml, file:astlib.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules astlib.ml > astlib.ml.depends
# Target: ast.ml.depends, tags: { extension:ml, file:ast.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules ast.ml > ast.ml.depends
# Target: util/range.mli.depends, tags: { extension:mli, file:util/range.mli, ocaml, ocamldep, quiet }
ocamldep.opt -modules util/range.mli > util/range.mli.depends
# Target: util/range.cmi, tags: { byte, compile, extension:mli, file:util/range.mli, interf, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I util -I x86 -I ll -o util/range.cmi util/range.mli
# Target: ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o ast.cmo ast.ml
# Target: backend.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:backend.cmo, file:backend.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o backend.cmo backend.ml
# Target: frontend.ml.depends, tags: { extension:ml, file:frontend.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules frontend.ml > frontend.ml.depends
# Target: astlib.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:astlib.cmo, file:astlib.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o astlib.cmo astlib.ml
# Target: typechecker.ml.depends, tags: { extension:ml, file:typechecker.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules typechecker.ml > typechecker.ml.depends
# Target: tctxt.ml.depends, tags: { extension:ml, file:tctxt.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules tctxt.ml > tctxt.ml.depends
# Target: tctxt.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:tctxt.cmo, file:tctxt.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o tctxt.cmo tctxt.ml
# Target: typechecker.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:typechecker.cmo, file:typechecker.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o typechecker.cmo typechecker.ml
# Target: lexer.mll, tags: { extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, quiet }
ocamllex.opt -q lexer.mll
# Target: lexer.ml.depends, tags: { extension:ml, file:lexer.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules lexer.ml > lexer.ml.depends
# Target: parser.mly.depends, tags: { extension:mly, file:parser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet }
menhir --raw-depend --ocamldep 'ocamldep.opt -modules' parser.mly > parser.mly.depends
# Target: parser.mly, tags: { byte, compile, extension:ml, extension:mly, file:parser.ml, file:parser.mly, infer, menhir, ocaml, parser, quiet }
menhir --ocamlc 'ocamlc.opt -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util' --explain --infer parser.mly
# Target: parser.mli.depends, tags: { extension:mli, file:parser.mli, ocaml, ocamldep, quiet }
ocamldep.opt -modules parser.mli > parser.mli.depends
# Target: parser.cmi, tags: { byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o parser.cmi parser.mli
# Target: ll/lllexer.mll, tags: { extension:mll, file:ll/lllexer.mll, lexer, ocaml, ocamllex, quiet }
ocamllex.opt -q ll/lllexer.mll
# Target: ll/lllexer.ml.depends, tags: { extension:ml, file:ll/lllexer.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules ll/lllexer.ml > ll/lllexer.ml.depends
# Target: ll/llparser.mly.depends, tags: { extension:mly, file:ll/llparser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet }
menhir --raw-depend --ocamldep 'ocamldep.opt -modules' ll/llparser.mly > ll/llparser.mly.depends
# Target: ll/llparser.mly, tags: { byte, compile, extension:ml, extension:mly, file:ll/llparser.ml, file:ll/llparser.mly, infer, menhir, ocaml, parser, quiet }
menhir --ocamlc 'ocamlc.opt -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I ll -I x86 -I util' --explain --infer ll/llparser.mly
# Target: ll/llparser.mli.depends, tags: { extension:mli, file:ll/llparser.mli, ocaml, ocamldep, quiet }
ocamldep.opt -modules ll/llparser.mli > ll/llparser.mli.depends
# Target: ll/llparser.cmi, tags: { byte, compile, extension:mli, file:ll/llparser.mli, interf, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I ll -I x86 -I util -o ll/llparser.cmi ll/llparser.mli
# Target: opt.ml.depends, tags: { extension:ml, file:opt.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules opt.ml > opt.ml.depends
# Target: alias.ml.depends, tags: { extension:ml, file:alias.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules alias.ml > alias.ml.depends
# Target: constprop.ml.depends, tags: { extension:ml, file:constprop.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules constprop.ml > constprop.ml.depends
# Target: dce.ml.depends, tags: { extension:ml, file:dce.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules dce.ml > dce.ml.depends
# Target: alias.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:alias.cmo, file:alias.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o alias.cmo alias.ml
+ ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o alias.cmo alias.ml
File "alias.ml", line 13, characters 34-52:
13 |     let compare : t -> t -> int = Pervasives.compare
                                       ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
# Target: constprop.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:constprop.cmo, file:constprop.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o constprop.cmo constprop.ml
+ ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o constprop.cmo constprop.ml
File "constprop.ml", line 97, characters 8-9:
97 |     let b = Cfg.block cfg l in
             ^
Warning 26: unused variable b.
File "constprop.ml", line 98, characters 8-10:
98 |     let cb = Graph.uid_out cg l in
             ^^
Warning 26: unused variable cb.
# Target: dce.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:dce.cmo, file:dce.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o dce.cmo dce.ml
# Target: registers.ml.depends, tags: { extension:ml, file:registers.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules registers.ml > registers.ml.depends
# Target: frontend.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:frontend.cmo, file:frontend.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o frontend.cmo frontend.ml
# Target: lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o lexer.cmo lexer.ml
# Target: ll/lllexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ll/lllexer.cmo, file:ll/lllexer.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I ll -I x86 -I util -o ll/lllexer.cmo ll/lllexer.ml
# Target: opt.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:opt.cmo, file:opt.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o opt.cmo opt.ml
# Target: registers.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:registers.cmo, file:registers.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o registers.cmo registers.ml
# Target: gradedtests.ml.depends, tags: { extension:ml, file:gradedtests.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules gradedtests.ml > gradedtests.ml.depends
# Target: analysistests.ml.depends, tags: { extension:ml, file:analysistests.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules analysistests.ml > analysistests.ml.depends
# Target: util/assert.cmi, tags: { byte, compile, extension:mli, file:util/assert.mli, interf, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I util -I x86 -I ll -o util/assert.cmi util/assert.mli
# Target: driver.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:driver.cmo, file:driver.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o driver.cmo driver.ml
# Target: analysistests.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:analysistests.cmo, file:analysistests.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o analysistests.cmo analysistests.ml
# Target: studenttests.ml.depends, tags: { extension:ml, file:studenttests.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules studenttests.ml > studenttests.ml.depends
# Target: gradedtests.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:gradedtests.cmo, file:gradedtests.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o gradedtests.cmo gradedtests.ml
# Target: studenttests.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:studenttests.cmo, file:studenttests.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o studenttests.cmo studenttests.ml
# Target: main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet }
ocamlc.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o main.cmo main.ml
# Target: util/assert.ml.depends, tags: { extension:ml, file:util/assert.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules util/assert.ml > util/assert.ml.depends
# Target: ll/ll.cmx, tags: { compile, extension:cmx, extension:ml, file:ll/ll.cmx, file:ll/ll.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I ll -I x86 -I util -o ll/ll.cmx ll/ll.ml
# Target: datastructures.cmx, tags: { compile, extension:cmx, extension:ml, file:datastructures.cmx, file:datastructures.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o datastructures.cmx datastructures.ml
# Target: ll/llutil.cmx, tags: { compile, extension:cmx, extension:ml, file:ll/llutil.cmx, file:ll/llutil.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I ll -I x86 -I util -o ll/llutil.cmx ll/llutil.ml
+ ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I ll -I x86 -I util -o ll/llutil.cmx ll/llutil.ml
File "ll/llutil.ml", line 134, characters 2-20:
134 |   Pervasives.compare
        ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
# Target: solver.cmx, tags: { compile, extension:cmx, extension:ml, file:solver.cmx, file:solver.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o solver.cmx solver.ml
# Target: cfg.cmx, tags: { compile, extension:cmx, extension:ml, file:cfg.cmx, file:cfg.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o cfg.cmx cfg.ml
# Target: liveness.cmx, tags: { compile, extension:cmx, extension:ml, file:liveness.cmx, file:liveness.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o liveness.cmx liveness.ml
# Target: util/platform.cmx, tags: { compile, extension:cmx, extension:ml, file:util/platform.cmx, file:util/platform.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I util -I x86 -I ll -o util/platform.cmx util/platform.ml
+ ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I util -I x86 -I ll -o util/platform.cmx util/platform.ml
File "util/platform.ml", line 77, characters 10-27:
77 |     flush Pervasives.stdout )
               ^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
# Target: x86/x86.cmx, tags: { compile, extension:cmx, extension:ml, file:x86/x86.cmx, file:x86/x86.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o x86/x86.cmx x86/x86.ml
# Target: util/range.ml.depends, tags: { extension:ml, file:util/range.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules util/range.ml > util/range.ml.depends
# Target: util/range.cmx, tags: { compile, extension:cmx, extension:ml, file:util/range.cmx, file:util/range.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I util -I x86 -I ll -o util/range.cmx util/range.ml
# Target: ast.cmx, tags: { compile, extension:cmx, extension:ml, file:ast.cmx, file:ast.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o ast.cmx ast.ml
# Target: backend.cmx, tags: { compile, extension:cmx, extension:ml, file:backend.cmx, file:backend.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o backend.cmx backend.ml
# Target: astlib.cmx, tags: { compile, extension:cmx, extension:ml, file:astlib.cmx, file:astlib.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o astlib.cmx astlib.ml
# Target: tctxt.cmx, tags: { compile, extension:cmx, extension:ml, file:tctxt.cmx, file:tctxt.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o tctxt.cmx tctxt.ml
# Target: typechecker.cmx, tags: { compile, extension:cmx, extension:ml, file:typechecker.cmx, file:typechecker.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o typechecker.cmx typechecker.ml
# Target: parser.ml.depends, tags: { extension:ml, file:parser.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules parser.ml > parser.ml.depends
# Target: parser.cmx, tags: { compile, extension:cmx, extension:ml, file:parser.cmx, file:parser.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o parser.cmx parser.ml
# Target: ll/llparser.ml.depends, tags: { extension:ml, file:ll/llparser.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules ll/llparser.ml > ll/llparser.ml.depends
# Target: ll/llparser.cmx, tags: { compile, extension:cmx, extension:ml, file:ll/llparser.cmx, file:ll/llparser.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I ll -I x86 -I util -o ll/llparser.cmx ll/llparser.ml
# Target: alias.cmx, tags: { compile, extension:cmx, extension:ml, file:alias.cmx, file:alias.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o alias.cmx alias.ml
+ ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o alias.cmx alias.ml
File "alias.ml", line 13, characters 34-52:
13 |     let compare : t -> t -> int = Pervasives.compare
                                       ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
# Target: constprop.cmx, tags: { compile, extension:cmx, extension:ml, file:constprop.cmx, file:constprop.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o constprop.cmx constprop.ml
+ ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o constprop.cmx constprop.ml
File "constprop.ml", line 97, characters 8-9:
97 |     let b = Cfg.block cfg l in
             ^
Warning 26: unused variable b.
File "constprop.ml", line 98, characters 8-10:
98 |     let cb = Graph.uid_out cg l in
             ^^
Warning 26: unused variable cb.
# Target: dce.cmx, tags: { compile, extension:cmx, extension:ml, file:dce.cmx, file:dce.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o dce.cmx dce.ml
# Target: frontend.cmx, tags: { compile, extension:cmx, extension:ml, file:frontend.cmx, file:frontend.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o frontend.cmx frontend.ml
# Target: lexer.cmx, tags: { compile, extension:cmx, extension:ml, file:lexer.cmx, file:lexer.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o lexer.cmx lexer.ml
# Target: ll/lllexer.cmx, tags: { compile, extension:cmx, extension:ml, file:ll/lllexer.cmx, file:ll/lllexer.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I ll -I x86 -I util -o ll/lllexer.cmx ll/lllexer.ml
# Target: opt.cmx, tags: { compile, extension:cmx, extension:ml, file:opt.cmx, file:opt.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o opt.cmx opt.ml
# Target: registers.cmx, tags: { compile, extension:cmx, extension:ml, file:registers.cmx, file:registers.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o registers.cmx registers.ml
# Target: util/assert.cmx, tags: { compile, extension:cmx, extension:ml, file:util/assert.cmx, file:util/assert.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I util -I x86 -I ll -o util/assert.cmx util/assert.ml
# Target: driver.cmx, tags: { compile, extension:cmx, extension:ml, file:driver.cmx, file:driver.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o driver.cmx driver.ml
# Target: analysistests.cmx, tags: { compile, extension:cmx, extension:ml, file:analysistests.cmx, file:analysistests.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o analysistests.cmx analysistests.ml
# Target: gradedtests.cmx, tags: { compile, extension:cmx, extension:ml, file:gradedtests.cmx, file:gradedtests.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o gradedtests.cmx gradedtests.ml
# Target: studenttests.cmx, tags: { compile, extension:cmx, extension:ml, file:studenttests.cmx, file:studenttests.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o studenttests.cmx studenttests.ml
# Target: main.cmx, tags: { compile, extension:cmx, extension:ml, file:main.cmx, file:main.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith -I x86 -I ll -I util -o main.cmx main.ml
# Target: main.native, tags: { dont_link_with, extension:native, file:main.native, link, native, ocaml, program, quiet }
ocamlopt.opt unix.cmxa str.cmxa -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith/zarith.cmxa -I ll -I util -I x86 ll/ll.cmx datastructures.cmx ll/llutil.cmx solver.cmx cfg.cmx alias.cmx constprop.cmx analysistests.cmx util/range.cmx ast.cmx astlib.cmx liveness.cmx util/platform.cmx x86/x86.cmx backend.cmx dce.cmx tctxt.cmx typechecker.cmx frontend.cmx parser.cmx lexer.cmx ll/llparser.cmx ll/lllexer.cmx opt.cmx registers.cmx driver.cmx util/assert.cmx gradedtests.cmx studenttests.cmx main.cmx -o main.native
+ ocamlopt.opt unix.cmxa str.cmxa -I /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith /Users/niko/.opam/ocaml-system.4.10.0/lib/zarith/zarith.cmxa -I ll -I util -I x86 ll/ll.cmx datastructures.cmx ll/llutil.cmx solver.cmx cfg.cmx alias.cmx constprop.cmx analysistests.cmx util/range.cmx ast.cmx astlib.cmx liveness.cmx util/platform.cmx x86/x86.cmx backend.cmx dce.cmx tctxt.cmx typechecker.cmx frontend.cmx parser.cmx lexer.cmx ll/llparser.cmx ll/lllexer.cmx opt.cmx registers.cmx driver.cmx util/assert.cmx gradedtests.cmx studenttests.cmx main.cmx -o main.native
ld: warning: directory not found for option '-L/opt/local/lib'
# Compilation successful.
